{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Save/Web/WebSaveState.ts"],"names":["WebSaveState","ApplicationState","constructor","prefferedLang","LoadState","Load","getFile","SaveState","state","setFile","Save","input"],"mappings":";;;iGAIaA,Y;;;;;;;;;;;;;;;;;;;;;;;;AAFJC,MAAAA,gB,iBAAAA,gB;;;;;;;;;8BAEID,Y,GAAN,MAAMA,YAAN,CACP;AACIE,QAAAA,WAAW,CAASC,aAAT,EAA8B;AAAA,eAArBA,aAAqB,GAArBA,aAAqB;AAAG;;AAE5CC,QAAAA,SAAS,GAAW;AAChB,iBAAO;AAAA;AAAA,oDAAiBC,IAAjB,CAAsB,KAAKC,OAAL,EAAtB,CAAP;AACH;;AAEDC,QAAAA,SAAS,CAACC,KAAD,EAAgC;AACrC,eAAKC,OAAL,CAAcD,KAAK,CAACE,IAAN,EAAd;AACH;;AAEOJ,QAAAA,OAAO,GACf;AACI;AACA,iBAAO,qBAAP;AACH;;AAEOG,QAAAA,OAAO,CAACE,KAAD,EACf,CACI;AACA;AACH;;AArBL,O","sourcesContent":["import { native } from 'cc'\r\nimport { IState, IStateSaver } from \"../SaveInterfaces\";\r\nimport { ApplicationState } from '../State';\r\n\r\nexport class WebSaveState implements IStateSaver\r\n{\r\n    constructor(private prefferedLang:string){ }\r\n\r\n    LoadState(): IState {\r\n        return ApplicationState.Load(this.getFile())\r\n    }\r\n    \r\n    SaveState(state: ApplicationState): void {\r\n        this.setFile( state.Save() )\r\n    }\r\n\r\n    private getFile():string\r\n    {\r\n        // return native.reflection.callStaticMethod(\"com/grit/fftc/utils/FileUtils\",\"getFile\",\"()Ljava/lang/String;\")\r\n        return \"load fileFromserver\"\r\n    }\r\n\r\n    private setFile(input:string)\r\n    {\r\n        ///sendfile to server\r\n        // native.reflection.callStaticMethod(\"com/grit/fftc/utils/FileUtils\",\"writeFile\",\"(Ljava/lang/String;)V\",input)\r\n    }\r\n}"]}