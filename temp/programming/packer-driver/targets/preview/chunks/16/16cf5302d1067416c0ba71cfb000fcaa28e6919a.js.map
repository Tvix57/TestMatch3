{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Logic/FieldListener.ts"],"names":["FieldListener","FieldConfig","constructor","field","CheckAvailableOption","checkAllVerticalOption","checkAllHorizontalOption","j","length","consecutiveSameColorCount","currentColor","i","minCombinationLength"],"mappings":";;;2CAOaA,a;;;;;;;;;;;;;;;;;;AAFJC,MAAAA,W,iBAAAA,W;;;;;qFAHT;;;+BAKaD,a,GAAN,MAAMA,aAAN;AAAA;AAAA,sCAAwC;AAC3CE,QAAAA,WAAW,CACCC,KADD,EAEX;AACI;AADJ,eADYA,KACZ,GADYA,KACZ;AAEC;;AAEDC,QAAAA,oBAAoB,GAAa;AAC7B,iBAAO,KAAKC,sBAAL,MACA,KAAKC,wBAAL,EADP;AAEH;;AAEOD,QAAAA,sBAAsB,GAAG;AAC7B,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAW,CAAX,EAAcK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,gBAAIE,yBAAyB,GAAG,CAAhC;AACA,gBAAIC,YAAY,GAAG,KAAKP,KAAL,CAAW,CAAX,EAAcI,CAAd,CAAnB;;AACA,iBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,KAAL,CAAWK,MAA/B,EAAuCG,CAAC,EAAxC,EAA4C;AACxC,kBAAI,KAAKR,KAAL,CAAWQ,CAAX,EAAcJ,CAAd,MAAqBG,YAAzB,EAAuC;AACnCD,gBAAAA,yBAAyB;AAC5B,eAFD,MAEO;AACHC,gBAAAA,YAAY,GAAG,KAAKP,KAAL,CAAWQ,CAAX,EAAcJ,CAAd,CAAf;AACAE,gBAAAA,yBAAyB,GAAG,CAA5B;AACH;;AACD,kBAAIA,yBAAyB,KAAK,KAAKG,oBAAvC,EAA6D;AACzD,uBAAO,IAAP;AACH;AACJ;AACJ;AACJ;;AAEON,QAAAA,wBAAwB,GAAG;AAC/B,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,KAAL,CAAWK,MAA/B,EAAuCG,CAAC,EAAxC,EAA4C;AACxC,gBAAIF,yBAAyB,GAAG,CAAhC;AACA,gBAAIC,YAAY,GAAG,KAAKP,KAAL,CAAWQ,CAAX,EAAc,CAAd,CAAnB;;AACA,iBAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWQ,CAAX,EAAcH,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,kBAAI,KAAKJ,KAAL,CAAWQ,CAAX,EAAcJ,CAAd,MAAqBG,YAAzB,EAAuC;AACnCD,gBAAAA,yBAAyB;AAC5B,eAFD,MAEO;AACHC,gBAAAA,YAAY,GAAG,KAAKP,KAAL,CAAWQ,CAAX,EAAcJ,CAAd,CAAf;AACAE,gBAAAA,yBAAyB,GAAG,CAA5B;AACH;;AACD,kBAAIA,yBAAyB,KAAK,KAAKG,oBAAvC,EAA6D;AACzD,uBAAO,IAAP;AACH;AACJ;AACJ;;AACD,iBAAO,KAAP;AACH;;AA/C0C,O","sourcesContent":["\r\n\r\n//// отслеживание кликов на ячейки и оставщиеся ходы\r\n\r\nimport { BallColor } from \"../Enums/BallColor\";\r\nimport { FieldConfig } from \"./FieldConfig\";\r\n\r\nexport class FieldListener extends FieldConfig {\r\n    constructor(\r\n        private field: Array<Array<BallColor>>)\r\n    {\r\n        super();\r\n    }\r\n\r\n    CheckAvailableOption() : boolean {\r\n        return this.checkAllVerticalOption() || \r\n               this.checkAllHorizontalOption();\r\n    }\r\n\r\n    private checkAllVerticalOption() {\r\n        for (let j = 0; j < this.field[0].length; j++) {\r\n            let consecutiveSameColorCount = 1;\r\n            let currentColor = this.field[0][j];\r\n            for (let i = 1; i < this.field.length; i++) {\r\n                if (this.field[i][j] === currentColor) {\r\n                    consecutiveSameColorCount++;\r\n                } else {\r\n                    currentColor = this.field[i][j];\r\n                    consecutiveSameColorCount = 1;\r\n                }\r\n                if (consecutiveSameColorCount === this.minCombinationLength) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkAllHorizontalOption() {\r\n        for (let i = 0; i < this.field.length; i++) {\r\n            let consecutiveSameColorCount = 1;\r\n            let currentColor = this.field[i][0];\r\n            for (let j = 1; j < this.field[i].length; j++) {\r\n                if (this.field[i][j] === currentColor) {\r\n                    consecutiveSameColorCount++;\r\n                } else {\r\n                    currentColor = this.field[i][j];\r\n                    consecutiveSameColorCount = 1;\r\n                }\r\n                if (consecutiveSameColorCount === this.minCombinationLength) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}"]}