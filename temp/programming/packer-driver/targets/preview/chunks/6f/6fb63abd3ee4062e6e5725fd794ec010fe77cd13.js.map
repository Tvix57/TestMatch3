{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Application/AppAudio.ts"],"names":["AbstrastAudio","Sound","Music","AppAudio","AudioType","SoundLvl","constructor","mngr","items","_items","_mngr","isActive","mng","GetAudios","filter","item","type","Activate","SetSoundLvl","ON","Deactivate","OFF","SetMusicLvl","manager","setting","_sound","_music","_mng","musicState","soundState","ResolveAudio","SOUND","MUSIC","ResolveSound","ResolveMusic","ResolveAudioManager"],"mappings":";;;yCAcMA,a,EAYAC,K,EAaAC,K,EAaOC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AApDJC,MAAAA,S,iBAAAA,S;;;;;;;AAIJC,MAAAA,Q,0BAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;AAAAA,QAAAA,Q,CAAAA,Q;eAAAA,Q;QAAAA,Q;;AAUCL,MAAAA,a,GAAN,MAAMA,aAAN,CAAoB;AAMhBM,QAAAA,WAAW,CAACC,IAAD,EAAsBC,KAAtB,EAAqC;AAAA,eALtCC,MAKsC,GALpB,EAKoB;AAAA,eAJtCC,KAIsC;AAAA,eAFhDC,QAEgD,GAFrC,IAEqC;AAC5C,eAAKD,KAAL,GAAaH,IAAb;AACA,eAAKE,MAAL,GAAcD,KAAd;AACH;;AATe,O;AAYdP,MAAAA,K,GAAN,MAAMA,KAAN,SAAoBD,aAApB,CAAoD;AAChDM,QAAAA,WAAW,CAACM,GAAD,EAAoB;AAC3B,gBAAMA,GAAN,EAAWA,GAAG,CAACC,SAAJ,GAAgBC,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,IAAL,IAAa,CAA5C,CAAX;AACH;;AAEDC,QAAAA,QAAQ,GAAS;AACb,eAAKP,KAAL,CAAWQ,WAAX,CAAuBb,QAAQ,CAACc,EAAhC;AACH;;AACDC,QAAAA,UAAU,GAAS;AACf,eAAKV,KAAL,CAAWQ,WAAX,CAAuBb,QAAQ,CAACgB,GAAhC;AACH;;AAV+C,O;AAa9CnB,MAAAA,K,GAAN,MAAMA,KAAN,SAAoBF,aAApB,CAAoD;AAChDM,QAAAA,WAAW,CAACM,GAAD,EAAoB;AAC3B,gBAAMA,GAAN,EAAWA,GAAG,CAACC,SAAJ,GAAgBC,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,IAAL,IAAa,CAA5C,CAAX;AACH;;AAEDC,QAAAA,QAAQ,GAAS;AACb,eAAKP,KAAL,CAAWY,WAAX,CAAuBjB,QAAQ,CAACc,EAAhC;AACH;;AACDC,QAAAA,UAAU,GAAS;AACf,eAAKV,KAAL,CAAWY,WAAX,CAAuBjB,QAAQ,CAACgB,GAAhC;AACH;;AAV+C,O;;0BAavClB,Q,GAAN,MAAMA,QAAN,CAAe;AAKlBG,QAAAA,WAAW,CAACiB,OAAD,EAAyBC,OAAzB,EAAgD;AAAA,eAJnDC,MAImD;AAAA,eAHnDC,MAGmD;AAAA,eAFnDC,IAEmD;AACvD,eAAKA,IAAL,GAAYJ,OAAZ;AACA,eAAKE,MAAL,GAAc,IAAIxB,KAAJ,CAAUsB,OAAV,CAAd;AACA,eAAKG,MAAL,GAAc,IAAIxB,KAAJ,CAAUqB,OAAV,CAAd;AAEAC,UAAAA,OAAO,CAACI,UAAR,GAAqB,KAAKF,MAAL,CAAYT,QAAZ,EAArB,GAA8C,KAAKS,MAAL,CAAYN,UAAZ,EAA9C;AACAI,UAAAA,OAAO,CAACK,UAAR,GAAqB,KAAKJ,MAAL,CAAYR,QAAZ,EAArB,GAA8C,KAAKQ,MAAL,CAAYL,UAAZ,EAA9C;AACH;;AAEDU,QAAAA,YAAY,CAACd,IAAD,EAAkC;AAC1C,cAAIA,IAAI,IAAI;AAAA;AAAA,sCAAUe,KAAtB,EAA6B,OAAO,KAAKN,MAAZ;AAC7B,cAAIT,IAAI,IAAI;AAAA;AAAA,sCAAUgB,KAAtB,EAA6B,OAAO,KAAKN,MAAZ;AAC7B,iBAAO,IAAP;AACH;;AAEDO,QAAAA,YAAY,GAAG;AAAE,iBAAO,KAAKR,MAAZ;AAAoB;;AAErCS,QAAAA,YAAY,GAAG;AAAE,iBAAO,KAAKR,MAAZ;AAAoB;;AAErCS,QAAAA,mBAAmB,GAAG;AAAE,iBAAO,KAAKR,IAAZ;AAAkB;;AAxBxB,O","sourcesContent":["import { AudioType } from \"../Scene/AudioManagerComponent\"\r\nimport { SettingsState } from \"../Settings/SettingsState\"\r\nimport { Audio, IAudioManager } from \"./ApplicationInterfaces\"\r\n\r\nenum SoundLvl {\r\n    OFF = 0,\r\n    ON = 0.3\r\n}\r\n\r\nexport interface IAudio {\r\n    Activate():void\r\n    Deactivate():void\r\n}\r\n\r\nclass AbstrastAudio {\r\n    protected _items: Audio[] = []\r\n    protected _mngr: IAudioManager\r\n    \r\n    isActive = true\r\n    \r\n    constructor(mngr: IAudioManager, items: Audio[]){\r\n        this._mngr = mngr\r\n        this._items = items\r\n    }\r\n}\r\n\r\nclass Sound extends AbstrastAudio implements IAudio {\r\n    constructor(mng: IAudioManager){\r\n        super(mng, mng.GetAudios().filter(item => item.type == 0))\r\n    }\r\n\r\n    Activate(): void {\r\n        this._mngr.SetSoundLvl(SoundLvl.ON)\r\n    }\r\n    Deactivate(): void {\r\n        this._mngr.SetSoundLvl(SoundLvl.OFF)\r\n    }\r\n}\r\n\r\nclass Music extends AbstrastAudio implements IAudio {\r\n    constructor(mng: IAudioManager){\r\n        super(mng, mng.GetAudios().filter(item => item.type == 1))\r\n    }\r\n\r\n    Activate(): void {\r\n        this._mngr.SetMusicLvl(SoundLvl.ON)\r\n    }\r\n    Deactivate(): void {\r\n        this._mngr.SetMusicLvl(SoundLvl.OFF)\r\n    }\r\n}\r\n\r\nexport class AppAudio {\r\n    private _sound: Sound\r\n    private _music: Music\r\n    private _mng: IAudioManager\r\n\r\n    constructor(manager: IAudioManager, setting:SettingsState ){\r\n        this._mng = manager\r\n        this._sound = new Sound(manager)\r\n        this._music = new Music(manager)\r\n\r\n        setting.musicState ? this._music.Activate() : this._music.Deactivate()\r\n        setting.soundState ? this._sound.Activate() : this._sound.Deactivate()\r\n    }\r\n\r\n    ResolveAudio(type: AudioType) : IAudio | null {\r\n        if (type == AudioType.SOUND) return this._sound\r\n        if (type == AudioType.MUSIC) return this._music\r\n        return null\r\n    }\r\n\r\n    ResolveSound() { return this._sound }\r\n\r\n    ResolveMusic() { return this._music }\r\n\r\n    ResolveAudioManager() { return this._mng }\r\n}"]}