{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Scene/GameScene/GameScenePresenter.ts"],"names":["GameScenePresenter","AnimationType","constructor","view","_logic","_state","_animationQueue","AddHandler","NewGame","name","SetName","NewScore","score","UpdateScore","toString","UpdateField","field","type","animationCallback","REMOVE","push","RemoveBalls","DropDown","DropDownBalls","DropDownNew","ShowNewField","EndGame","info","LoadData","GetField","gameState","OnBallClick","coord","PlayNextAnimation","length","pop","SaveCurrentGame"],"mappings":";;;6CAMaA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALJC,MAAAA,a,iBAAAA,a;;;;;;;oCAKID,kB,GAAN,MAAMA,kBAAN,CAAkD;AAIrDE,QAAAA,WAAW,CACCC,IADD,EAECC,MAFD,EAGCC,MAHD,EAIT;AAAA,eANMC,eAMN,GAN2C,EAM3C;AAAA,eAHUH,IAGV,GAHUA,IAGV;AAAA,eAFUC,MAEV,GAFUA,MAEV;AAAA,eADUC,MACV,GADUA,MACV;;AACE,eAAKD,MAAL,CAAYG,UAAZ,CAAuB,IAAvB;AACH;;AAEDC,QAAAA,OAAO,CAACC,IAAD,EAAqB;AACxB,eAAKN,IAAL,CAAUO,OAAV,CAAkBD,IAAlB;AACH;;AAEDE,QAAAA,QAAQ,CAAEC,KAAF,EAAuB;AAC3B,eAAKT,IAAL,CAAUU,WAAV,CAAsBD,KAAK,CAACE,QAAN,EAAtB;AACH;;AAEDC,QAAAA,WAAW,CAAEC,KAAF,EAAkCC,IAAlC,EAAwDC,iBAAxD,EAA8F;AACrG,kBAAQD,IAAR;AACI,iBAAK;AAAA;AAAA,gDAAcE,MAAnB;AACI,mBAAKb,eAAL,CAAqBc,IAArB,CAA0B,MAAM;AAC5B,qBAAKjB,IAAL,CAAUkB,WAAV,CAAsBL,KAAtB;AACH,eAFD;;AAGA;;AACJ,iBAAK;AAAA;AAAA,gDAAcM,QAAnB;AACI,mBAAKhB,eAAL,CAAqBc,IAArB,CAA0B,MAAM;AAC5B,qBAAKjB,IAAL,CAAUoB,aAAV,CAAwBP,KAAxB;AACH,eAFD;;AAGA;;AACJ,iBAAK;AAAA;AAAA,gDAAcQ,WAAnB;AACI,mBAAKlB,eAAL,CAAqBc,IAArB,CAA0B,MAAM;AAC5B,qBAAKjB,IAAL,CAAUsB,YAAV,CAAuBT,KAAvB;AACH,eAFD;;AAGA;AAfR;AAiBH;;AAEDU,QAAAA,OAAO,CAACC,IAAD,EAA4B,CAAE;;AAErCC,QAAAA,QAAQ,GAAG;AAAA;;AACP,eAAKzB,IAAL,CAAUsB,YAAV,CAAuB,KAAKrB,MAAL,CAAYyB,QAAZ,EAAvB;AACA,eAAK1B,IAAL,CAAUU,WAAV,oDAAsB,KAAKR,MAAL,CAAYyB,SAAlC,qBAAsB,uBAAuBlB,KAAvB,CAA6BE,QAA7B,EAAtB,oCAA+D,GAA/D;AACA,eAAKX,IAAL,CAAUO,OAAV,qDAAkB,KAAKL,MAAL,CAAYyB,SAA9B,qBAAkB,uBAAuBrB,IAAzC,qCAA+C,EAA/C;AACH;;AAEDsB,QAAAA,WAAW,CAACC,KAAD,EAAgC;AACvC,eAAK5B,MAAL,CAAY2B,WAAZ,CAAwBC,KAAxB;AACH;;AAEDC,QAAAA,iBAAiB,GAAG;AAChB,cAAI,KAAK3B,eAAL,CAAqB4B,MAArB,GAA8B,CAAlC,EAAqC;AAAA;;AACjC,0CAAK5B,eAAL,CAAqB6B,GAArB;AACH;AACJ;;AAEDC,QAAAA,eAAe,GAAG,CACd;AACH;;AA5DoD,O","sourcesContent":["import { BallColor } from \"../../Enums/BallColor\";\r\nimport { AnimationType, Field, IFieldHandler } from \"../../Logic/Field\";\r\nimport { GameStatsInfo } from \"../../Logic/GameStatsInfo\";\r\nimport { ApplicationState } from \"../../Save/State\";\r\nimport { GameSceneComponent } from \"./GameSceneComponent\";\r\n\r\nexport class GameScenePresenter implements IFieldHandler {\r\n\r\n    private _animationQueue: Array<() => void> = []\r\n\r\n    constructor(\r\n        private view: GameSceneComponent,\r\n        private _logic: Field,\r\n        private _state: ApplicationState\r\n    ) {\r\n        this._logic.AddHandler(this)\r\n    }\r\n\r\n    NewGame(name: string): void {\r\n        this.view.SetName(name)\r\n    }\r\n\r\n    NewScore?(score: number): void {\r\n        this.view.UpdateScore(score.toString())\r\n    }\r\n\r\n    UpdateField?(field: Array<Array<BallColor>>, type?: AnimationType, animationCallback?: () => void): void {\r\n        switch (type) {\r\n            case AnimationType.REMOVE:\r\n                this._animationQueue.push(() => {  \r\n                    this.view.RemoveBalls(field)\r\n                })\r\n                break\r\n            case AnimationType.DropDown:\r\n                this._animationQueue.push(() => {  \r\n                    this.view.DropDownBalls(field)\r\n                })\r\n                break\r\n            case AnimationType.DropDownNew:\r\n                this._animationQueue.push(() => {\r\n                    this.view.ShowNewField(field)\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    EndGame(info: GameStatsInfo): void {}\r\n\r\n    LoadData() {\r\n        this.view.ShowNewField(this._logic.GetField())\r\n        this.view.UpdateScore(this._state.gameState?.score.toString()??'0')\r\n        this.view.SetName(this._state.gameState?.name??'')\r\n    }\r\n\r\n    OnBallClick(coord: {x: number, y: number}) {\r\n        this._logic.OnBallClick(coord)\r\n    }\r\n\r\n    PlayNextAnimation() {\r\n        if (this._animationQueue.length > 0) {\r\n            this._animationQueue.pop()?.()\r\n        }\r\n    }\r\n\r\n    SaveCurrentGame() {\r\n        /////\r\n    }\r\n}"]}