{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Save/SaveContext.ts"],"names":["SaveContext","GameState","SaveTimerExecutor","constructor","saver","saveDispatcher","timer","_timeSaveExecutor","_state","AddHandler","LoadState","WillSave","DoSave","SaveState","IsFirstLaunch","isFirstLaunch","HasGame","IsGameFinished","GetCurrentSaveState","CreateNewGameState","name","gameState"],"mappings":";;;4DAOaA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,S,iBAAAA,S;;AAGAC,MAAAA,iB,iBAAAA,iB;;;;;;;6BAGIF,W,GAAN,MAAMA,WAAN,CACP;AAIIG,QAAAA,WAAW,CACCC,KADD,EAEPC,cAFO,EAGPC,KAHO,EAIT;AAAA,eAPMC,iBAON;AAAA,eANMC,MAMN;AAAA,eAHUJ,KAGV,GAHUA,KAGV;AACE,eAAKG,iBAAL,GAAyB;AAAA;AAAA,sDAAsBD,KAAtB,EAA4BD,cAA5B,EAA2C,EAA3C,CAAzB;AACAA,UAAAA,cAAc,CAACI,UAAf,CAA0B,IAA1B;AAEA,eAAKD,MAAL,GAAc,KAAKJ,KAAL,CAAWM,SAAX,EAAd;AACH;;AAEDC,QAAAA,QAAQ,GAAS,CAAE;;AAEnBC,QAAAA,MAAM,GAAS;AACX,eAAKR,KAAL,CAAWS,SAAX,CAAqB,KAAKL,MAA1B;AACH;;AAEDM,QAAAA,aAAa,GAAW;AAAA;;AACpB,0DAAO,KAAKN,MAAZ,qBAAO,aAAaO,aAApB,oCAAqC,IAArC;AACH;;AAEDC,QAAAA,OAAO,GAAW;AACd,cAAG,KAAKR,MAAR,EAAgB;AACZ,mBAAO,KAAKA,MAAL,CAAYQ,OAAZ,EAAP;AACH;;AACD,iBAAO,KAAP;AACH;;AAEDC,QAAAA,cAAc,GAAW;AACrB,cAAG,KAAKT,MAAR,EAAgB;AACZ,mBAAO,KAAKA,MAAL,CAAYS,cAAZ,EAAP;AACH;;AACD,iBAAO,KAAP;AACH;;AAEDC,QAAAA,mBAAmB,GAAoB;AACnC,iBAAO,KAAKV,MAAZ;AACH;;AAEDW,QAAAA,kBAAkB,CAACC,IAAD,EAA+B;AAC7C,eAAKZ,MAAL,CAAaa,SAAb,GAAyB;AAAA;AAAA,sCAAcD,IAAd,CAAzB;AACA,eAAKhB,KAAL,CAAWS,SAAX,CAAqB,KAAKL,MAA1B;AACA,iBAAO,KAAKA,MAAZ;AACH;;AA/CL,O","sourcesContent":["import { IAppTimer } from \"../Application/IAppTimer\";\r\nimport { GameState } from \"../Session/GameState\";\r\nimport { SaveDispatcher } from \"./SaveDispatcher\";\r\nimport { ISaveListener, IStateSaver } from \"./SaveInterfaces\";\r\nimport { SaveTimerExecutor } from \"./SaveTimerExecutor\";\r\nimport { ApplicationState } from \"./State\";\r\n\r\nexport class SaveContext implements ISaveListener\r\n{\r\n    private _timeSaveExecutor:SaveTimerExecutor\r\n    private _state:ApplicationState\r\n\r\n    constructor(\r\n        private saver:IStateSaver,\r\n        saveDispatcher:SaveDispatcher,\r\n        timer:IAppTimer\r\n    ) {\r\n        this._timeSaveExecutor = new SaveTimerExecutor(timer,saveDispatcher,60)\r\n        saveDispatcher.AddHandler(this)\r\n        \r\n        this._state = this.saver.LoadState() as ApplicationState\r\n    }\r\n    \r\n    WillSave(): void {}\r\n\r\n    DoSave(): void {\r\n        this.saver.SaveState(this._state!)        \r\n    }\r\n\r\n    IsFirstLaunch():boolean {\r\n        return this._state?.isFirstLaunch ?? true\r\n    }\r\n\r\n    HasGame():boolean {   \r\n        if(this._state) {\r\n            return this._state.HasGame()\r\n        }\r\n        return false\r\n    }\r\n\r\n    IsGameFinished():boolean {\r\n        if(this._state) {   \r\n            return this._state.IsGameFinished()\r\n        }\r\n        return false\r\n    }\r\n\r\n    GetCurrentSaveState():ApplicationState {\r\n        return this._state\r\n    }\r\n\r\n    CreateNewGameState(name:string):ApplicationState {\r\n        this._state!.gameState = new GameState(name) \r\n        this.saver.SaveState(this._state!)\r\n        return this._state!\r\n    }\r\n}"]}