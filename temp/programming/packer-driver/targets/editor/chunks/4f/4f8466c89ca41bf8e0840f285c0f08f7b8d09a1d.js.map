{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Logic/Loop.ts"],"names":["Loop","AbstractDispatcher","TimeSpeed","constructor","timer","_speedType","_pauseCount","_btnPause","AddHandler","Play","Tick","GetTimeSpeed","_dispatcher","Post","arg","OnDayChange","SetBtnPause","isPause","h","OnTimeSpeedChange","SetPause","SetSpeedUp","isSpeedup","SpeedUp","GetPause","GetBtnPause","Pause"],"mappings":";;;kDAeaA,I;;;;;;;;;;;;;;;;;;;;;;AAdJC,MAAAA,kB,iBAAAA,kB;;;;;;;2BAEGC,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;sBAYCF,I,GAAN,MAAMA,IAAN;AAAA;AAAA,oDACP;AAKIG,QAAAA,WAAW,CAACC,KAAD,EAAiB;AACxB;AADwB,eAJpBC,UAIoB;AAAA,eAHpBC,WAGoB;AAAA,eAFpBC,SAEoB;AAExBH,UAAAA,KAAK,CAACI,UAAN,CAAiB,IAAjB;AACA,eAAKH,UAAL,GAAkBH,SAAS,CAACO,IAA5B;AACA,eAAKH,WAAL,GAAmB,KAAnB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDG,QAAAA,IAAI,GAAS;AACT,cAAG,KAAKC,YAAL,OAAwBT,SAAS,CAACO,IAArC,EAA0C;AACtC,iBAAKG,WAAL,CAAiBC,IAAjB,CAAuBC,GAAD,IAAOA,GAAG,CAACC,WAAX,oBAAOD,GAAG,CAACC,WAAJ,EAA7B;AACH;AACJ;;AAEDC,QAAAA,WAAW,CAACC,OAAD,EAAkB;AACzB,eAAKV,SAAL,GAAiBU,OAAjB;;AACA,eAAKL,WAAL,CAAiBC,IAAjB,CAAuBK,CAAD,IAAkBA,CAAC,CAACC,iBAApB,oBAAkBD,CAAC,CAACC,iBAAF,CAAsB,KAAKR,YAAL,EAAtB,CAAxC;AACH;;AAEDS,QAAAA,QAAQ,CAACH,OAAD,EAAkB;AACtB,eAAKX,WAAL,GAAmBW,OAAnB;;AACA,eAAKL,WAAL,CAAiBC,IAAjB,CAAuBK,CAAD,IAAkBA,CAAC,CAACC,iBAApB,oBAAkBD,CAAC,CAACC,iBAAF,CAAsB,KAAKR,YAAL,EAAtB,CAAxC;AACH;;AACDU,QAAAA,UAAU,CAACC,SAAD,EAAoB;AAC1B,eAAKjB,UAAL,GAAkBiB,SAAS,GAAGpB,SAAS,CAACqB,OAAb,GAAuBrB,SAAS,CAACO,IAA5D;;AACA,eAAKG,WAAL,CAAiBC,IAAjB,CAAuBK,CAAD,IAAkBA,CAAC,CAACC,iBAApB,oBAAkBD,CAAC,CAACC,iBAAF,CAAsB,KAAKR,YAAL,EAAtB,CAAxC;AACH;;AAEDa,QAAAA,QAAQ,GAAG;AAAE,iBAAO,KAAKlB,WAAZ;AAAyB;;AACtCmB,QAAAA,WAAW,GAAG;AAAE,iBAAO,KAAKlB,SAAZ;AAAuB;;AAEvCI,QAAAA,YAAY,GAAa;AACrB,cAAG,KAAKL,WAAL,IAAoB,KAAKC,SAA5B,EAAuC,OAAOL,SAAS,CAACwB,KAAjB;AACvC,iBAAO,KAAKrB,UAAZ;AACH;;AAvCL,O","sourcesContent":["import { IAppTimer, IAppTimerHandler } from \"../Application/IAppTimer\"\r\nimport { AbstractDispatcher } from \"../Utils/Dispatcher\"\r\n\r\nexport enum TimeSpeed {\r\n    Pause,\r\n    Play,\r\n    SpeedUp\r\n}\r\n\r\nexport interface ILoopHandler\r\n{\r\n    OnDayChange?() : void\r\n    OnTimeSpeedChange?(newValue:TimeSpeed):void\r\n}\r\n\r\nexport class Loop extends AbstractDispatcher<ILoopHandler> implements IAppTimerHandler\r\n{\r\n    private _speedType:TimeSpeed\r\n    private _pauseCount:boolean\r\n    private _btnPause:boolean\r\n    \r\n    constructor(timer:IAppTimer){\r\n        super()\r\n        timer.AddHandler(this)\r\n        this._speedType = TimeSpeed.Play\r\n        this._pauseCount = false\r\n        this._btnPause = false\r\n    }\r\n\r\n    Tick(): void {\r\n        if(this.GetTimeSpeed() === TimeSpeed.Play){\r\n            this._dispatcher.Post((arg)=>arg.OnDayChange?.())\r\n        }\r\n    }\r\n\r\n    SetBtnPause(isPause:boolean) {\r\n        this._btnPause = isPause\r\n        this._dispatcher.Post((h:ILoopHandler)=>h.OnTimeSpeedChange?.(this.GetTimeSpeed()))\r\n    }\r\n\r\n    SetPause(isPause:boolean) {\r\n        this._pauseCount = isPause\r\n        this._dispatcher.Post((h:ILoopHandler)=>h.OnTimeSpeedChange?.(this.GetTimeSpeed()))\r\n    }\r\n    SetSpeedUp(isSpeedup:boolean) {\r\n        this._speedType = isSpeedup ? TimeSpeed.SpeedUp : TimeSpeed.Play\r\n        this._dispatcher.Post((h:ILoopHandler)=>h.OnTimeSpeedChange?.(this.GetTimeSpeed()))\r\n    }\r\n\r\n    GetPause() { return this._pauseCount }\r\n    GetBtnPause() { return this._btnPause }\r\n    \r\n    GetTimeSpeed():TimeSpeed {\r\n        if(this._pauseCount || this._btnPause) return TimeSpeed.Pause\r\n        return this._speedType\r\n    }\r\n}"]}