{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Save/SaveDispatcher.ts"],"names":["SaveDispatcher","AbstractDispatcher","constructor","blockers","Save","some","blocker","IsBlock","_dispatcher","Post","h","WillSave","DoSave","SetSaveBlocker","executor","push","Clear","length"],"mappings":";;;kDAcaA,c;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,kB,iBAAAA,kB;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;gCASaD,c,GAAN,MAAMA,cAAN,SAA6BC,kBAA7B,CACP;AAGIC,QAAAA,WAAW,GAAE;AACT;AADS,eAFLC,QAEK,GAFmB,EAEnB;AAEZ;;AAEDC,QAAAA,IAAI,GACJ;AACI,cAAG,KAAKD,QAAL,CAAcE,IAAd,CAAoBC,OAAD,IAAWA,OAAO,CAACC,OAAR,EAA9B,CAAH,EAAqD;AAAE;AAAQ;;AAE/D,eAAKC,WAAL,CAAiBC,IAAjB,CAAuBC,CAAD,IAAKA,CAAC,CAACC,QAAF,EAA3B;;AACA,eAAKH,WAAL,CAAiBC,IAAjB,CAAuBC,CAAD,IAAKA,CAAC,CAACE,MAAP,oBAAKF,CAAC,CAACE,MAAF,EAA3B;AACH;;AAEDC,QAAAA,cAAc,CAACC,QAAD,EAAqB;AAC/B,eAAKX,QAAL,CAAcY,IAAd,CAAmBD,QAAnB;AACH;;AAEDE,QAAAA,KAAK,GAAE;AACH,eAAKb,QAAL,CAAcc,MAAd,GAAuB,CAAvB;AACH;;AArBL,O","sourcesContent":["/**\r\n * \r\n * SaveDispatcher.ts\r\n * db://assets/Scripts/Save/SaveDispatcher.ts\r\n *\r\n */\r\n\r\nimport { AbstractDispatcher } from \"../Utils/Dispatcher\";\r\nimport { ISaveListener } from \"./SaveInterfaces\";\r\n\r\ninterface HasIsBlock{\r\n    IsBlock():boolean\r\n}\r\n\r\nexport class SaveDispatcher extends AbstractDispatcher<ISaveListener>\r\n{\r\n    private blockers:HasIsBlock[] = []\r\n\r\n    constructor(){\r\n        super()\r\n    }\r\n\r\n    Save()\r\n    {\r\n        if(this.blockers.some((blocker)=>blocker.IsBlock())) { return }\r\n        \r\n        this._dispatcher.Post((h)=>h.WillSave())\r\n        this._dispatcher.Post((h)=>h.DoSave?.())\r\n    }\r\n\r\n    SetSaveBlocker(executor:HasIsBlock){\r\n        this.blockers.push(executor)\r\n    }\r\n    \r\n    Clear(){\r\n        this.blockers.length = 0\r\n    }\r\n}"]}