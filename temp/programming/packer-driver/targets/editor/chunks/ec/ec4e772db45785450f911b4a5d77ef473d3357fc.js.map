{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Utils/PrefabLoader.ts"],"names":["PrefabLoader","Prefab","instantiate","resources","constructor","pathName","Create","name","Promise","resolve","reject","load","err","prefab"],"mappings":";;;kGAEaA,Y;;;;;;;;;AAFJC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;;;;;;;;;8BAEvBH,Y,GAAN,MAAMA,YAAN,CAAmB;AACtBI,QAAAA,WAAW,CACEC,QADF,EAEV;AAAA,eADYA,QACZ,GADYA,QACZ;AAAG;;AAEJC,QAAAA,MAAM,CAACC,IAAD,EAAe;AACjB,iBAAO,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAASC,MAAT,KACrBP,SAAS,CAACQ,IAAV,CAAeJ,IAAI,GAAEA,IAAF,GAAS,KAAKF,QAAjC,EAA2CJ,MAA3C,EAAkD,CAACW,GAAD,EAAKC,MAAL,KAAgB;AAC9D,gBAAGD,GAAG,IAAI,IAAV,EAAe;AACXH,cAAAA,OAAO,CAACP,WAAW,CAACW,MAAD,CAAZ,CAAP;AACH,aAFD,MAGI;AAAEH,cAAAA,MAAM,CAACE,GAAD,CAAN;AAAa;AACtB,WALD,CADG,CAAP;AAQH;;AAdqB,O","sourcesContent":["import { Prefab, Node, instantiate, resources } from \"cc\";\r\n\r\nexport class PrefabLoader {\r\n    constructor(\r\n        readonly pathName:string\r\n    ){ }\r\n\r\n    Create(name?:string) {\r\n        return new Promise<Node>((resolve,reject)=>\r\n            resources.load(name? name : this.pathName, Prefab,(err,prefab) => {\r\n                if(err == null){ \r\n                    resolve(instantiate(prefab))\r\n                }\r\n                else{ reject(err) }\r\n            })\r\n        )\r\n    }\r\n}"]}