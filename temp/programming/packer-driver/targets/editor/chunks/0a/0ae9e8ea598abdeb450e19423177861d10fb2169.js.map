{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Scene/GameScene/GameScenePresenter.ts"],"names":["GameScenePresenter","BallColor","constructor","view","_logic","_state","animationPromise","AddHandler","NewGame","name","SetName","NewScore","score","UpdateScore","toString","UpdateField","field","callback","playAnimation","EndGame","info","LoadData","ShowNewField","GetField","gameState","OnBallClick","coord","SaveCurrentGame","some","x","y","NONE","RemoveBalls","DropDownBalls"],"mappings":";;;yCAMaA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,S,iBAAAA,S;;;;;;;oCAMID,kB,GAAN,MAAMA,kBAAN,CAAkD;AAGrDE,QAAAA,WAAW,CACCC,IADD,EAECC,MAFD,EAGCC,MAHD,EAIT;AAAA,eALMC,gBAKN;AAAA,eAHUH,IAGV,GAHUA,IAGV;AAAA,eAFUC,MAEV,GAFUA,MAEV;AAAA,eADUC,MACV,GADUA,MACV;;AACE,eAAKD,MAAL,CAAYG,UAAZ,CAAuB,IAAvB;AACH;;AAEDC,QAAAA,OAAO,CAACC,IAAD,EAAqB;AACxB,eAAKN,IAAL,CAAUO,OAAV,CAAkBD,IAAlB;AACH;;AAEDE,QAAAA,QAAQ,CAAEC,KAAF,EAAuB;AAC3B,eAAKT,IAAL,CAAUU,WAAV,CAAsBD,KAAK,CAACE,QAAN,EAAtB;AACH;;AAEDC,QAAAA,WAAW,CAAEC,KAAF,EAAkCC,QAAlC,EAA+D;AACtE,eAAKC,aAAL,CAAmBF,KAAnB,EAA0BC,QAA1B;AACH;;AAEDE,QAAAA,OAAO,CAACC,IAAD,EAA4B,CAAE;;AAErCC,QAAAA,QAAQ,GAAG;AAAA;;AACP,eAAKlB,IAAL,CAAUmB,YAAV,CAAuB,KAAKlB,MAAL,CAAYmB,QAAZ,EAAvB;AACA,eAAKpB,IAAL,CAAUU,WAAV,oDAAsB,KAAKR,MAAL,CAAYmB,SAAlC,qBAAsB,uBAAuBZ,KAAvB,CAA6BE,QAA7B,EAAtB,oCAA+D,GAA/D;AACA,eAAKX,IAAL,CAAUO,OAAV,qDAAkB,KAAKL,MAAL,CAAYmB,SAA9B,qBAAkB,uBAAuBf,IAAzC,qCAA+C,EAA/C;AACH;;AAEDgB,QAAAA,WAAW,CAACC,KAAD,EAAgC;AACvC,eAAKtB,MAAL,CAAYqB,WAAZ,CAAwBC,KAAxB;AACH;;AAEDC,QAAAA,eAAe,GAAG,CACd;AACH;;AAEOT,QAAAA,aAAa,CAACF,KAAD,EAAiCC,QAAjC,EAAwD;AACzE,cAAID,KAAK,CAACY,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACD,IAAF,CAAOE,CAAC,IAAIA,CAAC,IAAI;AAAA;AAAA,sCAAUC,IAA3B,CAAhB,CAAJ,EAAuD;AACnD,iBAAK5B,IAAL,CAAU6B,WAAV,CAAsBhB,KAAtB,EAA6BC,QAA7B;AACH,WAFD,MAEO;AACH,iBAAKd,IAAL,CAAU8B,aAAV,CAAwBjB,KAAxB,EAA+BC,QAA/B;AACH;AACJ;;AA7CoD,O","sourcesContent":["import { BallColor } from \"../../Enums/BallColor\";\r\nimport { Field, IFieldHandler } from \"../../Logic/Field\";\r\nimport { GameStatsInfo } from \"../../Logic/GameStatsInfo\";\r\nimport { ApplicationState } from \"../../Save/State\";\r\nimport { GameSceneComponent } from \"./GameSceneComponent\";\r\n\r\nexport class GameScenePresenter implements IFieldHandler {\r\n\r\n    private animationPromise?:Promise<void>\r\n    constructor(\r\n        private view: GameSceneComponent,\r\n        private _logic: Field,\r\n        private _state: ApplicationState\r\n    ) {\r\n        this._logic.AddHandler(this)\r\n    }\r\n\r\n    NewGame(name: string): void {\r\n        this.view.SetName(name)\r\n    }\r\n\r\n    NewScore?(score: number): void {\r\n        this.view.UpdateScore(score.toString())\r\n    }\r\n\r\n    UpdateField?(field: Array<Array<BallColor>>, callback?: () => void): void {\r\n        this.playAnimation(field, callback)\r\n    }\r\n\r\n    EndGame(info: GameStatsInfo): void {}\r\n\r\n    LoadData() {\r\n        this.view.ShowNewField(this._logic.GetField())\r\n        this.view.UpdateScore(this._state.gameState?.score.toString()??'0')\r\n        this.view.SetName(this._state.gameState?.name??'')\r\n    }\r\n\r\n    OnBallClick(coord: {x: number, y: number}) {\r\n        this._logic.OnBallClick(coord)\r\n    }\r\n\r\n    SaveCurrentGame() {\r\n        /////\r\n    }\r\n\r\n    private playAnimation(field: Array<Array<BallColor>>, callback?: () => void) {\r\n        if (field.some(x => x.some(y => y == BallColor.NONE))) { \r\n            this.view.RemoveBalls(field, callback)\r\n        } else {\r\n            this.view.DropDownBalls(field, callback)\r\n        }\r\n    }\r\n}"]}