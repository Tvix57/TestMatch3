{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Utils/Dispatcher.ts"],"names":["AbstractDispatcher","Dispatcher","_dispatcher","AddHandler","arg","AddObserver","RemoveHandler","RemoveObserver","RemoveAll","constructor","_observers","Array","Post","fn","forEach","element","indexOf","push","index","splice","length"],"mappings":";;;iBAcsBA,kB,EAeTC,U;;;;;;;;;;;;;;;AA7Bb;AACA;AACA;AACA;AACA;AACA;;;oCASsBD,kB,GAAf,MAAeA,kBAAf,CACP;AAAA;AAAA,eACcE,WADd,GAC2C,IAAID,UAAJ,EAD3C;AAAA;;AAGIE,QAAAA,UAAU,CAACC,GAAD,EAAe;AACrB,eAAKF,WAAL,CAAiBG,WAAjB,CAA6BD,GAA7B;AACH;;AACDE,QAAAA,aAAa,CAACF,GAAD,EAAe;AACxB,eAAKF,WAAL,CAAiBK,cAAjB,CAAgCH,GAAhC;AACH;;AACDI,QAAAA,SAAS,GAAS;AACd,eAAKN,WAAL,CAAiBM,SAAjB;AACH;;AAXL,O;;4BAcaP,U,GAAN,MAAMA,UAAN,CAAmB;AAGtBQ,QAAAA,WAAW,GAAE;AAAA,eAFLC,UAEK;AACT,eAAKA,UAAL,GAAkB,IAAIC,KAAJ,EAAlB;AACH;;AAEDC,QAAAA,IAAI,CAACC,EAAD,EAAkB;AAClB,eAAKH,UAAL,CAAgBI,OAAhB,CAAwBC,OAAO,IAAI;AAAEF,YAAAA,EAAE,CAACE,OAAD,CAAF;AAAa,WAAlD;AACH;;AAEDV,QAAAA,WAAW,CAACD,GAAD,EAAQ;AACf,cAAG,KAAKM,UAAL,CAAgBM,OAAhB,CAAwBZ,GAAxB,KAAgC,CAAC,CAApC,EAAwC;;AACxC,eAAKM,UAAL,CAAgBO,IAAhB,CAAqBb,GAArB;AACH;;AAEDG,QAAAA,cAAc,CAACH,GAAD,EAAO;AACjB,cAAIc,KAAK,GAAG,KAAKR,UAAL,CAAgBM,OAAhB,CAAwBZ,GAAxB,CAAZ;;AACA,cAAGc,KAAK,IAAI,CAAC,CAAb,EAAe;AACX,iBAAKR,UAAL,CAAgBS,MAAhB,CAAuBD,KAAvB,EAA6B,CAA7B;AACH;AACJ;;AAEDV,QAAAA,SAAS,GAAE;AACP,eAAKE,UAAL,CAAgBU,MAAhB,GAAyB,CAAzB;AACH;;AAzBqB,O;;AA4BjB","sourcesContent":["/**\r\n * \r\n * Dispatcher.ts\r\n * db://assets/Scripts/Utils/Dispatcher.ts\r\n *\r\n */\r\n\r\nexport interface IDispatcher<T>\r\n{\r\n    AddHandler(arg: T): void ;\r\n    RemoveHandler(arg: T): void ;\r\n    RemoveAll(): void ;\r\n}\r\n\r\nexport abstract class AbstractDispatcher<T>\r\n{\r\n    protected _dispatcher: Dispatcher<T> = new Dispatcher\r\n\r\n    AddHandler(arg: T): void {\r\n        this._dispatcher.AddObserver(arg);\r\n    }\r\n    RemoveHandler(arg: T): void {\r\n        this._dispatcher.RemoveObserver(arg)\r\n    }\r\n    RemoveAll(): void {\r\n        this._dispatcher.RemoveAll()\r\n    }\r\n}\r\n\r\nexport class Dispatcher<T>{\r\n    private _observers : Array<T>\r\n\r\n    constructor(){\r\n        this._observers = new Array<T>\r\n    }\r\n\r\n    Post(fn:(arg:T)=>void){\r\n        this._observers.forEach(element => { fn(element) });\r\n    }\r\n\r\n    AddObserver(arg:T) {\r\n        if(this._observers.indexOf(arg) != -1 ) return\r\n        this._observers.push(arg);\r\n    }\r\n    \r\n    RemoveObserver(arg:T){\r\n        let index = this._observers.indexOf(arg)\r\n        if(index != -1){\r\n            this._observers.splice(index,1)\r\n        }\r\n    }\r\n\r\n    RemoveAll(){\r\n        this._observers.length = 0\r\n    }\r\n}\r\n\r\nexport{} //Supress --isolatedModules error"]}