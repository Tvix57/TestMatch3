{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Logic/FieldManager.ts"],"names":["FieldManager","FieldConfig","constructor","field","CheckFromCoord","coord","checkVerticalFromCoord","checkHorizontalFromCoord","result","startY","y","x","push","length","minCombinationLength","startX"],"mappings":"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","sourcesContent":["import { BallColor } from \"../Enums/BallColor\";\r\nimport { FieldConfig } from \"./FieldConfig\";\r\n\r\nexport class FieldManager extends FieldConfig{\r\n    constructor(private field : Array<Array<BallColor>>) {\r\n        super();\r\n    }\r\n\r\n    CheckFromCoord(coord: {x: number, y: number}) : {x: number, y: number}[] {\r\n        return [...this.checkVerticalFromCoord(coord), ...this.checkHorizontalFromCoord(coord)]\r\n    }\r\n\r\n    private checkVerticalFromCoord(coord: {x: number, y: number}) : {x: number, y: number}[] {\r\n        const result : {x: number, y: number}[] = []\r\n        let startY = coord.y\r\n        for (; this.field[coord.x][startY] && this.field[coord.x][startY] === this.field[coord.x][coord.y]; --startY) {\r\n            result.push({x: coord.x, y: startY})\r\n        }\r\n        startY = coord.y + 1\r\n        for (; this.field[coord.x][startY] && this.field[coord.x][startY] === this.field[coord.x][coord.y]; ++startY) {\r\n            result.push({x: coord.x, y: startY})\r\n        }\r\n        if (result.length >= this.minCombinationLength) return result\r\n        return []\r\n    }\r\n\r\n    private checkHorizontalFromCoord(coord: {x: number, y: number}) : {x: number, y: number}[] {\r\n        const result : {x: number, y: number}[] = []\r\n        let startX = coord.x\r\n        for (;this.field[startX] && this.field[startX][coord.y] && this.field[startX][coord.y] === this.field[coord.x][coord.y]; --startX) {\r\n            result.push({x: startX, y: coord.y})\r\n        }\r\n        startX = coord.x + 1\r\n        for (;this.field[startX] && this.field[startX][coord.y] && this.field[startX][coord.y] === this.field[coord.x][coord.y]; ++startX) {\r\n            result.push({x: startX, y: coord.y})\r\n        }\r\n        if (result.length >= this.minCombinationLength) return result\r\n        return []\r\n    }\r\n}"]}