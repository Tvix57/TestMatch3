{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Session/GameFactory.ts"],"names":["GameFactory","AppRoot","constructor","saveContext","CreateGame","name","tutor","CreateNewGame","ResolveSaveContext","CreateNewGameState","getInstance","ResovleSaveState","GetCurrentSaveState","statistic","characters","ResolveStatistic","ResolveGameReporter","ReportNewGame","LoadGame","state","totalSession","ResolveGameContext","IsGameActive","FinishGame","ClearGame","ResolveLibrary","ResolveStore","ResolveAds","ResolveTimer","ResolveSaveDispatcher"],"mappings":";;;uCAWaA,W;;;;;;;;;;;;;;;;;;;;;;AAJJC,MAAAA,O,iBAAAA,O;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;6BAMaD,W,GAAN,MAAMA,WAAN,CACP;AACIE,QAAAA,WAAW,CAASC,WAAT,EAA8B;AAAA,eAArBA,WAAqB,GAArBA,WAAqB;AAExC;;AAEDC,QAAAA,UAAU,CAACC,IAAD,EAAcC,KAAd,EACV;AACI,eAAKC,aAAL,CAAmB,KAAKJ,WAAL,CAAiBK,kBAAjB,GAAsCC,kBAAtC,CAAyDJ,IAAzD,EAA8DC,KAA9D,CAAnB;AACA;AAAA;AAAA,kCAAQI,WAAR,CAAoBC,gBAApB,GAAuCH,kBAAvC,GAA4DI,mBAA5D,GAAkFC,SAAlF,CAA4FC,UAA5F;AACA;AAAA;AAAA,kCAAQJ,WAAR,CAAoBK,gBAApB,GAAuCA,gBAAvC,GAA0DC,mBAA1D,GAAgFC,aAAhF,CAA8F;AAAA;AAAA,kCAAQP,WAAR,CAAoBC,gBAApB,GAAuCH,kBAAvC,GAA4DI,mBAA5D,GAAkFC,SAAlF,CAA4FC,UAA1L;AACH;;AAEDI,QAAAA,QAAQ,GACR;AACI,eAAKX,aAAL,CAAmB,KAAKJ,WAAL,CAAiBK,kBAAjB,GAAsCI,mBAAtC,EAAnB;AACH;;AAEOL,QAAAA,aAAa,CAACY,KAAD,EACrB;AACI;AAAA;AAAA,kCAAQT,WAAR,CAAoBC,gBAApB,GAAuCH,kBAAvC,GAA4DI,mBAA5D,GAAkFC,SAAlF,CAA4FO,YAA5F;;AACA,cAAG;AAAA;AAAA,kCAAQV,WAAR,CAAoBW,kBAApB,GAAyCC,YAAzC,EAAH,EAA4D;AACxD;AAAA;AAAA,oCAAQZ,WAAR,CAAoBW,kBAApB,GAAyCE,UAAzC;AACA;AAAA;AAAA,oCAAQb,WAAR,CAAoBW,kBAApB,GAAyCG,SAAzC;AACH;;AACD;AAAA;AAAA,kCAAQd,WAAR,CAAoBW,kBAApB,GAAyCjB,UAAzC,CACI;AAAA;AAAA,kCAAQM,WAAR,CAAoBe,cAApB,EADJ,EAEI;AAAA;AAAA,kCAAQf,WAAR,CAAoBgB,YAApB,EAFJ,EAGI;AAAA;AAAA,kCAAQhB,WAAR,CAAoBiB,UAApB,GAAiCA,UAAjC,EAHJ,EAII;AAAA;AAAA,kCAAQjB,WAAR,CAAoBkB,YAApB,EAJJ,EAKI;AAAA;AAAA,kCAAQlB,WAAR,CAAoBC,gBAApB,GAAuCkB,qBAAvC,EALJ,EAMIV,KANJ;AAQH;;AAhCL,O","sourcesContent":["/**\r\n * \r\n * GameFactory.ts\r\n * db://assets/Scripts/Session/GameFactory.ts\r\n *\r\n */\r\n\r\nimport { AppRoot } from \"../Application/AppRoot\";\r\nimport { AppState } from \"../Application/AppState\";\r\nimport { ApplicationState } from \"../Save/State\";\r\n\r\nexport class GameFactory \r\n{\r\n    constructor(private saveContext:AppState){\r\n        \r\n    }\r\n\r\n    CreateGame(name:string, tutor:boolean)\r\n    {\r\n        this.CreateNewGame(this.saveContext.ResolveSaveContext().CreateNewGameState(name,tutor))\r\n        AppRoot.getInstance.ResovleSaveState().ResolveSaveContext().GetCurrentSaveState().statistic.characters++\r\n        AppRoot.getInstance.ResolveStatistic().ResolveStatistic().ResolveGameReporter().ReportNewGame(AppRoot.getInstance.ResovleSaveState().ResolveSaveContext().GetCurrentSaveState().statistic.characters)\r\n    }\r\n\r\n    LoadGame()\r\n    {\r\n        this.CreateNewGame(this.saveContext.ResolveSaveContext().GetCurrentSaveState())\r\n    }\r\n\r\n    private CreateNewGame(state:ApplicationState)\r\n    {\r\n        AppRoot.getInstance.ResovleSaveState().ResolveSaveContext().GetCurrentSaveState().statistic.totalSession++\r\n        if(AppRoot.getInstance.ResolveGameContext().IsGameActive()) {\r\n            AppRoot.getInstance.ResolveGameContext().FinishGame()\r\n            AppRoot.getInstance.ResolveGameContext().ClearGame()\r\n        }\r\n        AppRoot.getInstance.ResolveGameContext().CreateGame(\r\n            AppRoot.getInstance.ResolveLibrary(), \r\n            AppRoot.getInstance.ResolveStore(), \r\n            AppRoot.getInstance.ResolveAds().ResolveAds(),\r\n            AppRoot.getInstance.ResolveTimer(), \r\n            AppRoot.getInstance.ResovleSaveState().ResolveSaveDispatcher(),\r\n            state\r\n        )\r\n    }\r\n}"]}