{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Session/GameFactory.ts"],"names":["GameFactory","AppRoot","constructor","saveContext","CreateGame","name","createNewGame","ResolveSaveContext","CreateNewGameState","LoadGame","GetCurrentSaveState","state","getInstance","ResolveGameContext","IsGameActive","FinishGame","ClearGame","ResolveTimer","ResovleSaveState","ResolveSaveDispatcher","ResolveSceneManager"],"mappings":";;;uCAWaA,W;;;;;;;;;;;;;;;;;;;;;;AAJJC,MAAAA,O,iBAAAA,O;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;6BAMaD,W,GAAN,MAAMA,WAAN,CACP;AACIE,QAAAA,WAAW,CAASC,WAAT,EAA8B;AAAA,eAArBA,WAAqB,GAArBA,WAAqB;AAAE;;AAE3CC,QAAAA,UAAU,CAACC,IAAD,EAAc;AACpB,eAAKC,aAAL,CAAmB,KAAKH,WAAL,CAAiBI,kBAAjB,GAAsCC,kBAAtC,CAAyDH,IAAzD,CAAnB;AACH;;AAEDI,QAAAA,QAAQ,GAAG;AACP,eAAKH,aAAL,CAAmB,KAAKH,WAAL,CAAiBI,kBAAjB,GAAsCG,mBAAtC,EAAnB;AACH;;AAEOJ,QAAAA,aAAa,CAACK,KAAD,EAA0B;AAC3C,cAAG;AAAA;AAAA,kCAAQC,WAAR,CAAoBC,kBAApB,GAAyCC,YAAzC,EAAH,EAA4D;AACxD;AAAA;AAAA,oCAAQF,WAAR,CAAoBC,kBAApB,GAAyCE,UAAzC;AACA;AAAA;AAAA,oCAAQH,WAAR,CAAoBC,kBAApB,GAAyCG,SAAzC;AACH;;AACD;AAAA;AAAA,kCAAQJ,WAAR,CAAoBC,kBAApB,GAAyCT,UAAzC,CACI;AAAA;AAAA,kCAAQQ,WAAR,CAAoBK,YAApB,EADJ,EAEI;AAAA;AAAA,kCAAQL,WAAR,CAAoBM,gBAApB,GAAuCC,qBAAvC,EAFJ,EAGI;AAAA;AAAA,kCAAQP,WAAR,CAAoBQ,mBAApB,EAHJ,EAIIT,KAJJ;AAMH;;AAtBL,O","sourcesContent":["/**\r\n * \r\n * GameFactory.ts\r\n * db://assets/Scripts/Session/GameFactory.ts\r\n *\r\n */\r\n\r\nimport { AppRoot } from \"../Application/AppRoot\";\r\nimport { AppState } from \"../Application/AppState\";\r\nimport { ApplicationState } from \"../Save/State\";\r\n\r\nexport class GameFactory \r\n{\r\n    constructor(private saveContext:AppState){}\r\n\r\n    CreateGame(name:string) {\r\n        this.createNewGame(this.saveContext.ResolveSaveContext().CreateNewGameState(name))\r\n    }\r\n\r\n    LoadGame() {\r\n        this.createNewGame(this.saveContext.ResolveSaveContext().GetCurrentSaveState())\r\n    }\r\n\r\n    private createNewGame(state:ApplicationState)  {\r\n        if(AppRoot.getInstance.ResolveGameContext().IsGameActive()) {\r\n            AppRoot.getInstance.ResolveGameContext().FinishGame()\r\n            AppRoot.getInstance.ResolveGameContext().ClearGame()\r\n        }\r\n        AppRoot.getInstance.ResolveGameContext().CreateGame(\r\n            AppRoot.getInstance.ResolveTimer(), \r\n            AppRoot.getInstance.ResovleSaveState().ResolveSaveDispatcher(),\r\n            AppRoot.getInstance.ResolveSceneManager(),\r\n            state\r\n        )\r\n    }\r\n}"]}