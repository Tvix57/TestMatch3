{"version":3,"sources":["file:///F:/git/TestMatch3/assets/Scripts/Session/GameFactory.ts"],"names":["GameFactory","AppRoot","constructor","saveContext","CreateGame","name","CreateNewGame","ResolveSaveContext","CreateNewGameState","LoadGame","GetCurrentSaveState","state","getInstance","ResovleSaveState","statistic","totalSession","ResolveGameContext","IsGameActive","FinishGame","ClearGame","ResolveTimer","ResolveSaveDispatcher"],"mappings":";;;uCAWaA,W;;;;;;;;;;;;;;;;;;;;;;AAJJC,MAAAA,O,iBAAAA,O;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;6BAMaD,W,GAAN,MAAMA,WAAN,CACP;AACIE,QAAAA,WAAW,CAASC,WAAT,EAA8B;AAAA,eAArBA,WAAqB,GAArBA,WAAqB;AAAE;;AAE3CC,QAAAA,UAAU,CAACC,IAAD,EACV;AACI,eAAKC,aAAL,CAAmB,KAAKH,WAAL,CAAiBI,kBAAjB,GAAsCC,kBAAtC,CAAyDH,IAAzD,CAAnB;AACH;;AAEDI,QAAAA,QAAQ,GACR;AACI,eAAKH,aAAL,CAAmB,KAAKH,WAAL,CAAiBI,kBAAjB,GAAsCG,mBAAtC,EAAnB;AACH;;AAEOJ,QAAAA,aAAa,CAACK,KAAD,EACrB;AACI;AAAA;AAAA,kCAAQC,WAAR,CAAoBC,gBAApB,GAAuCN,kBAAvC,GAA4DG,mBAA5D,GAAkFI,SAAlF,CAA4FC,YAA5F;;AACA,cAAG;AAAA;AAAA,kCAAQH,WAAR,CAAoBI,kBAApB,GAAyCC,YAAzC,EAAH,EAA4D;AACxD;AAAA;AAAA,oCAAQL,WAAR,CAAoBI,kBAApB,GAAyCE,UAAzC;AACA;AAAA;AAAA,oCAAQN,WAAR,CAAoBI,kBAApB,GAAyCG,SAAzC;AACH;;AACD;AAAA;AAAA,kCAAQP,WAAR,CAAoBI,kBAApB,GAAyCZ,UAAzC,CACI;AAAA;AAAA,kCAAQQ,WAAR,CAAoBQ,YAApB,EADJ,EAEI;AAAA;AAAA,kCAAQR,WAAR,CAAoBC,gBAApB,GAAuCQ,qBAAvC,EAFJ,EAGIV,KAHJ;AAKH;;AAzBL,O","sourcesContent":["/**\r\n * \r\n * GameFactory.ts\r\n * db://assets/Scripts/Session/GameFactory.ts\r\n *\r\n */\r\n\r\nimport { AppRoot } from \"../Application/AppRoot\";\r\nimport { AppState } from \"../Application/AppState\";\r\nimport { ApplicationState } from \"../Save/State\";\r\n\r\nexport class GameFactory \r\n{\r\n    constructor(private saveContext:AppState){}\r\n\r\n    CreateGame(name:string)\r\n    {\r\n        this.CreateNewGame(this.saveContext.ResolveSaveContext().CreateNewGameState(name))\r\n    }\r\n\r\n    LoadGame()\r\n    {\r\n        this.CreateNewGame(this.saveContext.ResolveSaveContext().GetCurrentSaveState())\r\n    }\r\n\r\n    private CreateNewGame(state:ApplicationState)\r\n    {\r\n        AppRoot.getInstance.ResovleSaveState().ResolveSaveContext().GetCurrentSaveState().statistic.totalSession++\r\n        if(AppRoot.getInstance.ResolveGameContext().IsGameActive()) {\r\n            AppRoot.getInstance.ResolveGameContext().FinishGame()\r\n            AppRoot.getInstance.ResolveGameContext().ClearGame()\r\n        }\r\n        AppRoot.getInstance.ResolveGameContext().CreateGame(\r\n            AppRoot.getInstance.ResolveTimer(), \r\n            AppRoot.getInstance.ResovleSaveState().ResolveSaveDispatcher(),\r\n            state\r\n        )\r\n    }\r\n}"]}